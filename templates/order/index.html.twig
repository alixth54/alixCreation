{% extends 'base.html.twig' %}

{% block title %}{% endblock %}
{% block javascripts %}
<script src="https://js.stripe.com/v3/"></script>

{% endblock %}


{% block body %}


{{ form_start(form, {'attr': {'id': 'payment-form'}}) }}
 <div class="form-row">
    <label for="card-element">Credit or debit card</label>
    <div id="card-element">
    
      <!-- a Stripe Element will be inserted here. -->
    </div>
    <!-- Used to display form errors -->
    <div id="card-errors"></div>
  </div>
	{{ form_row(form.save) }}
  {{ form_end(form) }}


{# <script src="{{ asset('payment.js') }}"></script> #}
<script>
var stripe = Stripe('pk_test_51ObOMoK60wgWalzXIEePXua9V35Hkokn6E3Yj4nebA27CICQPkkU2IbprxFhrH8plgq021gdgGjxfiLfXNZio8ZT00T3vOQkhW');
var elements = stripe.elements();
// Custom Styling
var style = {
    base: {
        color: '#32325d',
        lineHeight: '24px',
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
            color: '#aab7c4'
        }
    },
    invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
    }
};
// Create an instance of the card Element
var card = elements.create('card', {hidePostalCode: true,style: style});
// Add an instance of the card Element into the `card-element` <div>
card.mount('#card-element');
// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
if (event.error) {
        displayError.textContent = event.error.message;
    } else {
        displayError.textContent = '';
    }
});
// Handle form submission
var form = document.getElementById('payment-form');
form.addEventListener('submit', function(event) {
    event.preventDefault();
	
stripe.createToken(card).then(function(result) {
		
        if (result.error) {
            // Inform the user if there was an error
            var errorElement = document.getElementById('card-errors');
            errorElement.textContent = result.error.message;
        } else {
            stripeTokenHandler(result.token);
        }
    });
	
});
// Send Stripe Token to Server
function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
// Add Stripe Token to hidden input
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);
	
// Submit form
    form.submit();
}</script>

{% endblock %}
